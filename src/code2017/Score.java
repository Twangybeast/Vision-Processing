package code2017;

public class Score
{
	ScoreType type;
	public double ratio;
	public double[] xprofile;
	public double[] yprofile;
	private boolean evaluated=false;
	private int score=-1;
	private final static int[] GAUSS={
		5, 12, 15, 12, 5
	};
	private final static int GAUSS_DIV=49;
	public Score(double ratio, ScoreType type)
	{
		this.type=type;
		this.ratio=ratio;
	}
	public Score(double[] xprofile, double[] yprofile)
	{
		this.type=ScoreType.PROFILE;
		this.xprofile=xprofile;
		this.yprofile=yprofile;
	}
	public int getScore(Property property)
	{
		if(!evaluated)
		{
			evaluateScore(property);
		}
		return score;
	}
	public void evaluateScore(Property property)
	{
		switch(type)
		{
			case EQUIV_RECT:
				score=calcScore(Math.atan(ratio), property.hwatan, 0.3);
				break;
			case COVERAGE:
				//score=calcScore(ratio, 1.0/3.0, 0.1858);
				score=(int) limit((int) (Math.pow(Math.abs((property.coverage)-ratio)/0.2,2)*100));
				break;
			case MOMENT:
				score=calcScore(ratio, property.moment, 0.2);
				break;
			case PROFILE:
				//score=profileScore();
				score=profileScore2();
				break;
			case GREENESS:
				score=limit((int) (100*(1.0-ratio)));
				break;
			case CENTERNESS:
				score=limit((int) (ratio*200), 0, 50);
				break;
		}
		evaluated=true;
	}
	private int limit(int d, int min, int max)
	{
		return (int) Math.max(min, Math.min(max, d));
	}
	private int limit(int d)
	{
		return (int) Math.max(0.0, Math.min(100.0, d));
	}
	private int calcScore(double ratio, double ideal, double maxDev)
	{
		return (int) Math.max(0.0,Math.min(100.0,((Math.abs(ratio-ideal)/maxDev)*100)));
	}
	private int profileScore2()
	{
		int score=0;
		xprofile=normalizeProfile(xprofile);
		yprofile=normalizeProfile(yprofile);
		final int[] derivKernel=
			{
				-4, -3, 0, 3, 4
			};
		final int derivDiv=7;
		final double zero_threshold=0.07;
		double[] xderiv=conv(xprofile, derivKernel, derivDiv);
		double[] yderiv=conv(yprofile, derivKernel, derivDiv);
		
		
		score=limit(score);
		return score;
	}
	private double[] normalizeProfile(double[] profile)
	{
		double[] normalized=new double[profile.length];
		normalized=conv(profile, GAUSS, GAUSS_DIV);
		
		return normalized;
	}
	private double[] conv(double[] profile, int[] mask, int div)
	{
		double[] conv=new double[profile.length];
		int index=(mask.length-1)/2;
		for(int i=0;i<profile.length;i++)
		{
			double total=0;
			for(int j=0;j<mask.length;j++)
			{
				int current=(i+(j-index));
				double value;
				if(current>=0&&current<profile.length)
				{
					value=profile[current];
				}
				else
				{
					value=profile[i];
				}
				total=total+(value*mask[j]);
			}
			total=total/(div*1.0);
			conv[i]=total;
		}
		return conv;
	}
	//Don't put anything else below this comment
 	static final double[] profileMaxX = { 0.5325419745487893, 0.7722804963523211,
			0.9437657370298176, 1.0232068477333296, 1.049626613273606,
			1.0609269644417032, 1.0574181511285068, 1.0492152986857035,
			1.0446743664223905, 1.0317483659740134, 1.0374145675127089,
			1.07219296306833, 1.018050547507774, 0.9194192618397579,
			0.7913106378571826, 0.6801335686045272, 0.5732009307630057,
			0.47435216452105144, 0.4068677557293565, 0.34421431057124097,
			0.28032910523377613, 0.243026130621746, 0.21550982911462735,
			0.20494623310757853, 0.20047674349750916, 0.19767388390252877,
			0.197720369136684, 0.19749555365904653, 0.1966911318998693,
			0.19643333701086751, 0.1971169425571753, 0.1957908146219804,
			0.19552300924524643, 0.19565255654155542, 0.19468088461890623,
			0.19419006810099093, 0.19489452308002497, 0.19474206817185669,
			0.1951117240580812, 0.19651591818643768, 0.19740953043465662,
			0.1968813830788542, 0.19692696396270137, 0.1958027307632876,
			0.1951828225174134, 0.19556780708088445, 0.19562764044293757,
			0.19612008158771135, 0.1966472097232204, 0.19660949803398145,
			0.19660949803398145, 0.1966472097232204, 0.19612008158771135,
			0.19562764044293757, 0.19556780708088445, 0.1951828225174134,
			0.1958027307632876, 0.19692696396270137, 0.1968813830788542,
			0.19740953043465662, 0.19651591818643768, 0.1951117240580812,
			0.19474206817185669, 0.19489452308002497, 0.19419006810099093,
			0.19468088461890623, 0.19565255654155542, 0.19552300924524643,
			0.1957908146219804, 0.1971169425571753, 0.19643333701086751,
			0.1966911318998693, 0.19749555365904653, 0.197720369136684,
			0.19767388390252877, 0.20047674349750916, 0.20494623310757853,
			0.21550982911462735, 0.243026130621746, 0.28032910523377613,
			0.34421431057124097, 0.4068677557293565, 0.47435216452105144,
			0.5732009307630057, 0.6801335686045272, 0.7913106378571826,
			0.9194192618397579, 1.018050547507774, 1.07219296306833,
			1.0374145675127089, 1.0317483659740134, 1.0446743664223905,
			1.0492152986857035, 1.0574181511285068, 1.0609269644417032,
			1.049626613273606, 1.0232068477333296, 0.9437657370298176,
			0.7722804963523211, 0.5325419745487893 };
	static final double[] profileMaxY = { 0.12193135366010589, 0.12703006495864894,
			0.14518035051864792, 0.15289980335246955, 0.16174827134078565,
			0.17361103656735818, 0.17916152501223062, 0.18152339915912497,
			0.18781491825201935, 0.19273497505438686, 0.1996116766378952,
			0.20758578846450312, 0.21580813387964115, 0.222364956612006,
			0.2253929879098854, 0.23277642949042723, 0.23650360058740905,
			0.23982370264623296, 0.24209486136890102, 0.2422386484300219,
			0.24457883471411607, 0.24792766839021502, 0.25082427642010013,
			0.2520831073381642, 0.2529583200908265, 0.2532229263735606,
			0.25369254030784666, 0.2551786343559369, 0.25486683345537536,
			0.2525791552938892, 0.2526794102577287, 0.2530030142328574,
			0.252292218075372, 0.2520628791421964, 0.2523001305676126,
			0.2548276355654818, 0.2531652368972359, 0.2531183648700706,
			0.25484213099276626, 0.25494936893662684, 0.2545397214570442,
			0.2532696181239743, 0.2515291100367782, 0.2515613960056998,
			0.2514380394152972, 0.25122612387684334, 0.25534380704115006,
			0.25652237968771086, 0.2553330136713359, 0.2562685861018664,
			0.2586217691922319, 0.2585496495336308, 0.2620202311945956,
			0.263324574711494, 0.2663114929559388, 0.2688802888415248,
			0.27223785303711895, 0.2809687957650937, 0.28902465906035923,
			0.30210088876915125, 0.31591475714768313, 0.3352879136018885,
			0.350741832321321, 0.36733913958144676, 0.38927812394426503,
			0.4157309628901814, 0.4462789475300839, 0.47686729996562693,
			0.5083834209803791, 0.5431188871172126, 0.589945845522837,
			0.624281547371798, 0.6659741637601201, 0.7119242437166428,
			0.7572716549843661, 0.8035198700909241, 0.8428210155729507,
			0.8920977389931223, 0.9342417327231008, 0.9804075152273352,
			1.0198875791840776, 1.063989824598999, 1.1199284578219508,
			1.1613501698335593, 1.193577096878319, 1.1924309567342442,
			1.1786159071065367, 1.1645674311832162, 1.1492111890146004,
			1.1287185905189232, 1.1008794149153454, 1.0768840675563864,
			1.048323520569128, 1.0169364788029793, 0.9771959047325056,
			0.9039267362474883, 0.8418678094813794, 0.7622854628835617,
			0.5810810230321509, 0.3283870447301824 };
	static final double[] profileMinX = { -0.16852752284136432, -0.14501327330537173,
			-0.03824013373685892, 0.07104773558856164, 0.18039099727022045,
			0.2702628956982512, 0.34329225977533007, 0.4104041340446292,
			0.4581510961559417, 0.49889122336539526, 0.47510537753581716,
			0.2922930492826088, 0.07495234208992685, -0.038680811134493176,
			-0.06273215302582552, -0.06750379344755009, -0.05553750870531898,
			-0.026669486907982737, -0.004669852246615314, 0.02408560939810639,
			0.05625239383864561, 0.07835501900487814, 0.09590516402449704,
			0.10228523504460013, 0.10431934454790219, 0.10653733739032245,
			0.10707328025120466, 0.1074202037393408, 0.10791207537395577,
			0.1070282735411121, 0.1064788502537177, 0.10795560442444758,
			0.10813697836076838, 0.10780963121374712, 0.1089478180702951,
			0.10986758407572328, 0.10895107463212376, 0.10921422229838447,
			0.10937648141073658, 0.10881459098704979, 0.10798257230528832,
			0.10828235509977305, 0.10820969496577469, 0.10841483526896531,
			0.10947996331789481, 0.10949419754490058, 0.10944902709653959,
			0.10898885367406111, 0.10860678386326775, 0.1094939535645382,
			0.1094939535645382, 0.10860678386326775, 0.10898885367406111,
			0.10944902709653959, 0.10949419754490058, 0.10947996331789481,
			0.10841483526896531, 0.10820969496577469, 0.10828235509977305,
			0.10798257230528832, 0.10881459098704979, 0.10937648141073658,
			0.10921422229838447, 0.10895107463212376, 0.10986758407572328,
			0.1089478180702951, 0.10780963121374712, 0.10813697836076838,
			0.10795560442444758, 0.1064788502537177, 0.1070282735411121,
			0.10791207537395577, 0.1074202037393408, 0.10707328025120466,
			0.10653733739032245, 0.10431934454790219, 0.10228523504460013,
			0.09590516402449704, 0.07835501900487814, 0.05625239383864561,
			0.02408560939810639, -0.004669852246615314, -0.026669486907982737,
			-0.05553750870531898, -0.06750379344755009, -0.06273215302582552,
			-0.038680811134493176, 0.07495234208992685, 0.2922930492826088,
			0.47510537753581716, 0.49889122336539526, 0.4581510961559417,
			0.4104041340446292, 0.34329225977533007, 0.2702628956982512,
			0.18039099727022045, 0.07104773558856164, -0.03824013373685892,
			-0.14501327330537173, -0.16852752284136432 };
	static final double[] profileMinY = { -0.012565949576067006,
			-0.009505449356118134, 0.040042737082312506, 0.053574229835870776,
			0.0542074692574096, 0.05264863496662609, 0.05102331911027591,
			0.05388853633109911, 0.05465971072216762, 0.053718135911625775,
			0.05389623812767125, 0.054646174054458735, 0.055967748823494576,
			0.05544488040523769, 0.05879040384017223, 0.059581659150788974,
			0.06194470961782578, 0.06391308679539512, 0.06543748880750362,
			0.07101905633439808, 0.07488016556487281, 0.07610800534762961,
			0.08620654845770641, 0.09167249947201436, 0.09792411613919891,
			0.10761240362218832, 0.11187471602720933, 0.11716560324031126,
			0.12137344772724389, 0.1281050801806022, 0.13167008467282143,
			0.1335741786994158, 0.13700387321261082, 0.13891416767823872,
			0.1404715960437331, 0.13959610297631905, 0.14369847117701448,
			0.14692910006039545, 0.14710717998896605, 0.1494973729403744,
			0.1526191603887237, 0.15511028545957675, 0.15937841588820234,
			0.1613804828158908, 0.162052520748342, 0.1635320543448129,
			0.1616017995727234, 0.1622581774472371, 0.16383796769663628,
			0.16487189171530026, 0.1634177607804433, 0.16328720304095765,
			0.1615773380762056, 0.16151628151190953, 0.1597930549312745,
			0.15945548824728328, 0.15836543897071823, 0.1537185530715592,
			0.1505394471523281, 0.1445049921707754, 0.1385556486959037,
			0.12654047704795984, 0.11965450099573215, 0.11419107667626799,
			0.10830976108987722, 0.09732249107900756, 0.08565244503029967,
			0.07952628824565308, 0.07298130231865338, 0.06832083446382253,
			0.06803832476537874, 0.07287837308132977, 0.0826283581326489,
			0.08918628491891367, 0.10134667056738045, 0.11817729804259369,
			0.12519913619107376, 0.14265816817519672, 0.1689190951347953,
			0.20452183681338465, 0.27769407037825794, 0.33093005191003494,
			0.3827442488408085, 0.3825908369739944, 0.36494939014814254,
			0.326053975136237, 0.29160548595406216, 0.24754608329366057,
			0.19208736368781304, 0.14738047915029606, 0.0963964429094113,
			0.04678820175465448, 0.0028948404016799767, -0.04839095305519103,
			-0.09823268067940166, -0.13611624362816493, -0.17919975542559263,
			-0.2155597905937513, -0.20134609730818862, -0.158912037398586 };
}
